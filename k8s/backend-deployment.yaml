apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 3 
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: init-db-check
          image: busybox
          command: ['sh', '-c', 'until nc -z $DB_HOST 5432; do echo waiting for database; sleep 2; done']
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: db_host
      containers:
        - name: backend
          image: myapp-backend:latest  
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: db_host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: db_user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secret
                  key: db_password
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: database-config
                  key: db_name
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
            requests:
              memory: "64Mi"
              cpu: "250m"
          livenessProbe:
            httpGet:
              path: /health/live
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
